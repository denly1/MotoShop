import { db } from './db/index.js';

const checkOrders = async () => {
  try {
    console.log('üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ...\n');
    
    const ordersCount = await db('orders').count('* as count').first();
    console.log(`üì¶ –ó–∞–∫–∞–∑–æ–≤ –≤ –±–∞–∑–µ: ${ordersCount.count}`);
    
    if (ordersCount.count === '0') {
      console.log('\n‚ö†Ô∏è  –í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤!');
      console.log('–≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –Ω–æ–≤–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏.');
      console.log('–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤.\n');
    } else {
      const orders = await db('orders')
        .select('id', 'order_number', 'status', 'total_amount', 'created_at')
        .limit(5);
      
      console.log('\nüìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–∫–∞–∑—ã:');
      orders.forEach(o => {
        console.log(`   ${o.order_number} - ${o.status} - ${o.total_amount} —Ä—É–±. (${new Date(o.created_at).toLocaleDateString()})`);
      });
    }
    
    process.exit(0);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
    process.exit(1);
  }
};

checkOrders();
