import React from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import { products } from '../../data/products';
import { useCart } from '../../context/CartContext';
import './ProductDetail.css';

const ProductDetail = () => {
  const { id } = useParams();
  const navigate = useNavigate();
  const { addToCart } = useCart();

  const product = products.find(p => p.id === parseInt(id));

  if (!product) {
    return (
      <div className="container">
        <div className="not-found">
          <h2>–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω</h2>
          <button onClick={() => navigate('/catalog')} className="btn btn-primary">
            –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞—Ç–∞–ª–æ–≥
          </button>
        </div>
      </div>
    );
  }

  const handleAddToCart = () => {
    addToCart(product);
    // Optional: Show notification or redirect
  };

  const formatPrice = (price) => {
    return new Intl.NumberFormat('ru-RU', {
      style: 'currency',
      currency: 'RUB',
      maximumFractionDigits: 0,
    }).format(price);
  };

  return (
    <div className="product-detail">
      <div className="container">
        <button onClick={() => navigate(-1)} className="back-button">
          ‚Üê –ù–∞–∑–∞–¥
        </button>

        <div className="product-detail-content">
          <div className="product-detail-image">
            <img src={product.image} alt={product.name} />
            {!product.inStock && (
              <div className="out-of-stock-overlay">
                <span>–ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏</span>
              </div>
            )}
          </div>

          <div className="product-detail-info">
            <span className="product-category">{product.category}</span>
            <h1 className="product-title">{product.name}</h1>
            
            <div className="product-price-section">
              <span className="product-price">{formatPrice(product.price)}</span>
              {product.inStock ? (
                <span className="in-stock-badge">‚úÖ –í –Ω–∞–ª–∏—á–∏–∏</span>
              ) : (
                <span className="out-of-stock-badge">‚ùå –ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏</span>
              )}
            </div>

            <p className="product-description-full">{product.description}</p>

            <div className="product-features">
              <h3>–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:</h3>
              <ul>
                {product.features.map((feature, index) => (
                  <li key={index}>‚úì {feature}</li>
                ))}
              </ul>
            </div>

            <div className="product-actions">
              <button 
                className={`btn ${product.inStock ? 'btn-primary btn-large' : 'btn-disabled btn-large'}`}
                onClick={handleAddToCart}
                disabled={!product.inStock}
              >
                {product.inStock ? 'üõí –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É' : '–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ'}
              </button>
            </div>

            <div className="product-delivery-info">
              <div className="delivery-item">
                <span className="delivery-icon">üöö</span>
                <div>
                  <strong>–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞</strong>
                  <p>–ü–æ –≤—Å–µ–π –†–æ—Å—Å–∏–∏</p>
                </div>
              </div>
              <div className="delivery-item">
                <span className="delivery-icon">üí∞</span>
                <div>
                  <strong>–ì–∞—Ä–∞–Ω—Ç–∏—è</strong>
                  <p>–û—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è</p>
                </div>
              </div>
              <div className="delivery-item">
                <span className="delivery-icon">üîß</span>
                <div>
                  <strong>–°–µ—Ä–≤–∏—Å</strong>
                  <p>–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ</p>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default ProductDetail;

